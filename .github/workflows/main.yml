name: Release
on:
  push:
    branches: [ 'wip/release-reporting' ]
jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.13+hotfix.9'
      - name: "Create secrets.json"
        run: echo ${{ secrets.ApplicationSecrets }} | base64 -d > assets/secrets.json
      - run: flutter test

  build-ios-release:
    name: Build - iOS - Release
    needs: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.13+hotfix.9'
      - name: "Create secrets.json"
        run: echo ${{ secrets.ApplicationSecrets }} | base64 -d > assets/secrets.json
      - name: "Build - iOS - Release"
        run: flutter build ios --release --no-codesign --build-number=$GITHUB_RUN_ID

  build-android-release:
    name: Build - Android - Release
    needs: test
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.13+hotfix.9'
      - name: "Create android_key.jks"
        run: echo ${{ secrets.AndroidReleaseKey }} | base64 -d > android/android_key.jks
      - name: "Create key.properties"
        run: printf 'keyAlias=%s\nkeyPassword=%s\nstoreFile=./../android_key.jks\nstorePassword=%s' ${{ secrets.keyAlias }} ${{ secrets.keyPassword }} ${{ secrets.storePassword }} > android/key.properties
      - name: "Create secrets.json"
        run: echo ${{ secrets.ApplicationSecrets }} | base64 -d > assets/secrets.json
      - name: "Build Android Bundle"
        run: flutter build appbundle --release --build-number=$GITHUB_RUN_ID
      - name: "Upload application bundle"
        uses: actions/upload-artifact@v1
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  deploy-android-release:
    name: Deploy - Android - Release
    needs: build-android-release
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Download application bundle"
        uses: actions/download-artifact@v1
        with:
          name: appbundle
      - name: "Setup Sentry CLI"
        uses: mathrix-education/setup-sentry-cli@0.1.0
        with:
          token: ${{ secrets.SentryAuthToken }}
          organization: ${{ secrets.SentryOrg }}
          project: ${{ secrets.SentryProject }}
      - name: "Install Fastlane"
        run: brew install fastlane
      - name: "Create api-key.json"
        run: echo ${{ secrets.PlayConsoleApiKey }} | base64 -d > api-key.json
      - name: "Deploy for Internal Testing"
        run: SUPPLY_VERSION_CODE=$GITHUB_RUN_ID fastlane deploy_internal_test
        working-directory: android
        env:
          SUPPLY_AAB: ../appbundle/app-release.aab
      - name: "Create new Sentry release"
        run: |
          export VERSION_NAME="com.tarbadev.atoupic.Atoupic@$(awk -F': ' '/^version/{print$2}' pubspec.yaml | awk -F'+' '{print $1}')+$GITHUB_RUN_ID"
          sentry-cli releases new $VERSION_NAME
          sentry-cli releases set-commits --auto $VERSION_NAME
          sentry-cli releases finalize $VERSION_NAME
          sentry-cli releases deploys $VERSION_NAME new -e internaltest
